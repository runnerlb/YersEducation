@{
    ViewBag.Title = "教学视频信息";
}
<div id="app">
    <el-row class="bgwhite">
        <el-col :span="24">
            <el-form :inline="true">
                <el-form-item label="视频标题">
                    <el-input placeholder="视频标题" v-model="listQuery.title"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" @@click="getlist()" icon="el-icon-search">查询</el-button>
                    <el-button type="primary" @@click="add()" icon="el-icon-plus">添加</el-button>
                </el-form-item>
            </el-form>
        </el-col>
        <el-col :span="24">
            <el-table :data="tableData" border style="width: 100%">
                <el-table-column label="序号" type="index" width="60"></el-table-column>
                <el-table-column label="封面图片">
                    <template slot-scope="scope">
                        <img v-if="scope.row.coverPicture" :src="'/UploadImage/'+scope.row.coverPicture" style="height: 50px;" />
                    </template>
                </el-table-column>
                <el-table-column prop="title" label="视频标题"></el-table-column>
                <el-table-column prop="courseTypeName" label="课程类型"></el-table-column>
                <el-table-column prop="videoTypeName" label="视频类型"></el-table-column>
                <el-table-column prop="lecturerName" label="讲师姓名"></el-table-column>
                <el-table-column prop="onlineTime" label="上线时间"></el-table-column>
                <el-table-column label="操作" width="100">
                    <template slot-scope="scope">
                        <el-dropdown>
                            <el-button type="primary" size="mini">
                                更多<i class="el-icon-arrow-down el-icon--right"></i>
                            </el-button>
                            <el-dropdown-menu slot="dropdown">
                                <el-dropdown-item @@click.native="handleDetail(scope.$index, scope.row)">查看课程</el-dropdown-item>
                                <el-dropdown-item @@click.native="handleEdit(scope.$index, scope.row)">编辑</el-dropdown-item>
                                <el-dropdown-item @@click.native="handleDelete(scope.$index, scope.row)">删除</el-dropdown-item>
                            </el-dropdown-menu>
                        </el-dropdown>
                    </template>
                </el-table-column>
            </el-table>
        </el-col>
        <el-col :span="24" class="pagination-container">
            <el-pagination background @@size-change="handleSizeChange" @@current-change="handleCurrentChange" :current-page="listQuery.page"
                           :page-sizes="[10,20,30, 50]" :page-size="listQuery.limit" layout="total, sizes, prev, pager, next, jumper" :total="total">
            </el-pagination>
        </el-col>
    </el-row>
</div>

@section scripts{
    <script type="text/javascript">
        var App = new Vue({
            el: "#app",
            data() {
                return {
                    total: 0,
                    listQuery: {
                        page: 1,
                        limit: 10,
                        title: ''
                    },
                    tableData: []
                }
            },
            methods: {
                getlist() {
                    window.axios.get('/Video/GetList', { params: this.listQuery })
                        .then((response) => {
                            this.tableData = response.data.data.data;
                            this.total = response.data.data.total;
                        })
                        .catch((error) => {
                            console.log(error);
                        });
                },
                add() {
                    window.location.href = '/Video/Edit';
                },
                handleEdit(index, row) {
                    window.location.href = '/Video/Edit/' + row.id;
                },
                handleDelete(index, row) {
                    this.$confirm('此操作将永久删除该数据, 是否继续?', '提示', { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' })
                        .then(() => {
                            window.axios.post('/Video/Delete', { id: row.id })
                                .then((response) => {
                                    var data = response.data;
                                    if (data.result) {
                                        this.$message({ message: data.msg, type: 'success' });
                                        this.getlist();
                                    } else {
                                        this.$message.error(data.msg);
                                    }
                                })
                                .catch((error) => {
                                    console.log(error);
                                });

                        })
                        .catch(() => {
                            this.$message({ type: 'info', message: '已取消删除' });
                        });
                },
                handleCommand(command) {
                    switch (command) {
                        case 'edit':
                            break;
                        case 'delete':
                            break;
                        case 'detail':
                            break;
                    }
                },
                handleSizeChange(val) {
                    this.listQuery.limit = val;
                    this.getlist();
                },
                handleCurrentChange(val) {
                    this.listQuery.page = val;
                    this.getlist();
                }
            },
            mounted() {
                this.getlist();
            }
        });
    </script>
}