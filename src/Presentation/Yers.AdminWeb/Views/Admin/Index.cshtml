@{
    ViewBag.Title = "管理员信息";
}
<div id="app">
    <el-row class="bgwhite">
        <el-col :span="24">
            <el-form :inline="true">
                <el-form-item label="用户名">
                    <el-input placeholder="用户名" v-model="listQuery.userName"></el-input>
                </el-form-item>
                <el-form-item label="登录名">
                    <el-input placeholder="登录名" v-model="listQuery.loginName"></el-input>
                </el-form-item>
                <el-form-item label="手机号">
                    <el-input placeholder="手机号" v-model="listQuery.phone"></el-input>
                </el-form-item>
                <el-form-item label="电子邮件">
                    <el-input placeholder="电子邮件" v-model="listQuery.email"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button type="primary" @@click="getlist()" icon="el-icon-search">查询</el-button>
                    <el-button type="primary" @@click="showModal('adminUser')" icon="el-icon-plus">添加</el-button>
                </el-form-item>
            </el-form>
        </el-col>
        <el-col :span="24">
            <el-table :data="tableData" border style="width: 100%">
                <el-table-column label="序号" type="index" width="60"></el-table-column>
                <el-table-column prop="userName" label="用户名"></el-table-column>
                <el-table-column prop="loginName" label="登录名"></el-table-column>
                <el-table-column prop="phoneNumber" label="手机号"></el-table-column>
                <el-table-column prop="email" label="电子邮件"></el-table-column>
                <el-table-column prop="createDateTime" label="创建时间"></el-table-column>
                <el-table-column label="操作" width="160">
                    <template slot-scope="scope">
                        <el-button size="mini" type="primary" @@click="handleEdit(scope.$index, scope.row)">编辑</el-button>
                        <el-button size="mini" type="danger" @@click="handleDelete(scope.$index, scope.row)">删除</el-button>
                    </template>
                </el-table-column>
            </el-table>
        </el-col>
        <el-col :span="24" class="pagination-container">
            <el-pagination background @@size-change="handleSizeChange" @@current-change="handleCurrentChange" :current-page="listQuery.page"
                           :page-sizes="[10,20,30, 50]" :page-size="listQuery.limit" layout="total, sizes, prev, pager, next, jumper" :total="total">
            </el-pagination>
        </el-col>
        <el-dialog :title="title" :visible.sync="dialogFormVisible" width="30%">
            <el-form ref="adminUser" status-icon :model="adminUser" label-width="100px" :rules="rules">
                <input type="hidden" v-model="adminUser.Id" />
                <el-form-item prop="UserName" label="用户名">
                    <el-input v-model="adminUser.UserName"></el-input>
                </el-form-item>
                <el-form-item prop="LoginName" label="登录名">
                    <el-input v-model="adminUser.LoginName"></el-input>
                </el-form-item>
                <el-form-item prop="PhoneNumber" label="手机号">
                    <el-input v-model="adminUser.PhoneNumber"></el-input>
                </el-form-item>
                <el-form-item prop="Email" label="邮箱">
                    <el-input v-model="adminUser.Email"></el-input>
                </el-form-item>
                <el-form-item>
                    <el-button :disabled="saveDisabled" @@click="create('adminUser')" type="primary">立即保存</el-button>
                    <el-button @@click="cancel('adminUser')">取消</el-button>
                </el-form-item>
            </el-form>
        </el-dialog>
    </el-row>
</div>

@section scripts{
    <script type="text/javascript">
        var App = new Vue({
            el: "#app",
            data() {
                var checkPhone = (rule, value, callback) => {
                    if (!value) {
                        return callback(new Error('手机号不能为空'));
                    }
                    setTimeout(() => {
                        if (!/^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\d{8}$/.test(value)) {
                            callback(new Error('请输入正确的手机号'));
                        } else {
                            callback();
                        }
                    }, 50);
                    return false;
                }
                return {
                    loading: true,
                    total: 0,
                    listQuery: {
                        page: 1,
                        limit: 10,
                        userName: '',
                        loginName: '',
                        phone: '',
                        email: ''
                    },
                    title: "添加管理员信息",
                    dialogFormVisible: false,
                    saveDisabled: false,
                    tableData: [],
                    adminUser: {
                        UserName: '',
                        LoginName: '',
                        PhoneNumber: '',
                        Email: ''
                    },
                    rules: {
                        LoginName: [
                            { required: true, message: '请输入登录名', trigger: 'blur' },
                            { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }
                        ],
                        UserName: [
                            { required: true, message: '请输入用户名', trigger: 'blur' },
                            { min: 2, max: 20, message: '长度在 2 到 20 个字符', trigger: 'blur' }
                        ],
                        PhoneNumber: [
                            { required: true, validator: checkPhone, trigger: 'blur' },
                        ],
                        Email: [
                            { required: true, message: '请输入邮箱地址', trigger: 'blur' },
                            { type: 'email', message: '请输入正确的邮箱地址', trigger: 'change' }
                        ]
                    }
                }
            },
            methods: {
                getlist() {
                    window.axios.get('/Admin/GetList', { params: this.listQuery })
                        .then((response) => {
                            this.tableData = response.data.data.data;
                            this.total = response.data.data.total;
                        })
                        .catch((error) => {
                            console.log(error);
                        });
                },
                showModal(formName) {
                    this.dialogFormVisible = true;
                    this.adminUser = {
                        UserName: '',
                        LoginName: '',
                        PhoneNumber: '',
                        Email: '',
                        Id: 0
                    };
                    this.$refs[formName].resetFields();
                    this.title = "添加管理员信息";
                },
                cancel(formName) {
                    this.dialogFormVisible = false;
                    this.$refs[formName].resetFields();
                },
                create(formName) {
                    this.$refs[formName].validate((valid) => {
                        if (valid) {
                            this.saveDisabled = true;
                            window.axios.post('/Admin/Add', this.adminUser)
                                .then((response) => {
                                    var data = response.data;
                                    if (data.result) {
                                        this.$message({
                                            message: data.msg,
                                            type: 'success'
                                        });
                                        this.getlist();
                                        this.dialogFormVisible = false;
                                    } else {
                                        this.$message.error(data.msg);
                                    }
                                    this.saveDisabled = false;
                                })
                                .catch((error) => {
                                    this.$message.error(error);
                                    this.saveDisabled = false;
                                });
                        } else {
                            this.$message.error('请检查表单信息是否正确');
                            return false;
                        }
                    });
                },
                handleEdit(index, row) {
                    this.dialogFormVisible = true;
                    var adminUser = {
                        UserName: row.userName,
                        LoginName: row.loginName,
                        PhoneNumber: row.phoneNumber,
                        Email: row.email,
                        Id: row.id
                    }
                    this.adminUser = adminUser;
                    this.title = "修改管理员信息";
                },
                handleDelete(index, row) {
                    this.$confirm('此操作将永久删除该账号, 是否继续?', '提示', { confirmButtonText: '确定', cancelButtonText: '取消', type: 'warning' })
                        .then(() => {
                            window.axios.post('/Admin/Delete', { id: row.id })
                                .then((response) => {
                                    var data = response.data;
                                    if (data.result) {
                                        this.$message({ message: data.msg, type: 'success' });
                                        this.getlist();
                                    } else {
                                        this.$message.error(data.msg);
                                    }
                                })
                                .catch((error) => {
                                    console.log(error);
                                });

                        })
                        .catch(() => {
                            this.$message({ type: 'info', message: '已取消删除' });
                        });
                },
                handleSizeChange(val) {
                    this.listQuery.limit = val;
                    this.getlist();
                },
                handleCurrentChange(val) {
                    this.listQuery.page = val;
                    this.getlist();
                }
            },
            mounted() {
                this.getlist();
            }
        });
    </script>
}